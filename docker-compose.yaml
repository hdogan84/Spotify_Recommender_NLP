version: '3.8'

services:
  mysql:
    build:
      context: ./src/mysql
      args:
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        MYSQL_DATABASE: ${MYSQL_DATABASE}
    container_name: mysql-container
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
      - MYSQL_HOST
    ports:
      - "3306:3306"
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis-bde
    ports:
      - "6379:6379"
    networks:
      - app-network

  adminer:
    image: adminer:latest
    container_name: adminer
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    networks:
      - app-network

  music-db-api:
    image: music-db-api:latest
    build:
      context: ./src/database
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
      - MYSQL_HOST
      - CLIENT_ID
      - CLIENT_SECRET
    depends_on:
      - mysql
    volumes:
      - ./reports/logs/:/app/reports/logs/
      - ./data/music-dataset-1950-to-2019/tcc_ceds_music.csv:/app/data/tcc_ceds_music.csv
      - ./tools/mysql_data_model/:/app/tools/mysql_data_model/ #should be enough to bind the folder for all files
    networks:
      - app-network


  music-recsys-api:
    image: music-recsys-api:latest
    build:
      context: ./src/recsys
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
      - MYSQL_HOST
    volumes:
      - ./reports/logs/:/app/reports/logs/
      - ./data/ML_models/:/app/ML_models/ 
    networks:
      - app-network   

networks:
  app-network:
    driver: bridge